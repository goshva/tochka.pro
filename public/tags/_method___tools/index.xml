<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>_method___tools on Точка.Pro Центр иновационного творчества</title>
    <link>https://aeroki.ru/tags/_method___tools/</link>
    <description>Recent content in _method___tools on Точка.Pro Центр иновационного творчества</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru</language><atom:link href="https://aeroki.ru/tags/_method___tools/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>⛳️ Votre API web passe-t-elle le contrôle technique ? </title>
      <link>https://aeroki.ru/sessions/_votre_api_web_passe_t_elle_le_controle_technique__/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://aeroki.ru/sessions/_votre_api_web_passe_t_elle_le_controle_technique__/</guid>
      <description>Nous savons tous développer une API mais avons-nous tous bien intégré les problématiques d&amp;rsquo;environnements et de cycles logiciels multiples ? L&amp;rsquo;opérabilité, la gouvernance, le versioning, la traçabilité, la sécurité — et bien plus encore — de ces API web une fois en production ?
Durant ce talk, c&amp;rsquo;est plusieurs dizaines de points d&amp;rsquo;attention rarement évoqués que je vous propose d&amp;rsquo;aborder, à la lumière de retours d&amp;rsquo;expériences provenant de chez Uber, Stripe, Facebook, &amp;hellip;</description>
    </item>
    
    <item>
      <title>Allo Paris, ici San Francisco. Et si on codait ensemble avec VS Code?</title>
      <link>https://aeroki.ru/sessions/allo_paris__ici_san_francisco__et_si_on_codait_ensemble_avec_vs_code_/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://aeroki.ru/sessions/allo_paris__ici_san_francisco__et_si_on_codait_ensemble_avec_vs_code_/</guid>
      <description>Vous aimez VS Code car il est simple, intuitif et qu&amp;rsquo;il fait ce que vous lui demandez.
Mais saviez-vous que vous pouviez coder à plusieurs dans VS Code? et même permettre à une personne tierce de jouer avec votre débugger depuis l&amp;rsquo;autre bout du monde? Saviez-vous que vous pouviez avoir un client slack dans VS Code, et même un chat audio?
Et avez-vous exploré toutes les possibilités que VS Code offre quand vous utilisez GitHub?</description>
    </item>
    
    <item>
      <title>Authentication/Authorization Starters Battle</title>
      <link>https://aeroki.ru/sessions/authentication_authorization_starters_battle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://aeroki.ru/sessions/authentication_authorization_starters_battle/</guid>
      <description>When you start a brand new app or service, you need to think about how you will manage authentication and permissions. But if you are like everyone else, you genuinely do not want to actually think about this. If someone else could do that for you, life would be great. And this has actually happened, you have the choice between several boilerplate projects or authentication/authorization libraries. In fact, you have a lot of options.</description>
    </item>
    
    <item>
      <title>DevOps at scale</title>
      <link>https://aeroki.ru/sessions/devops_at_scale/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://aeroki.ru/sessions/devops_at_scale/</guid>
      <description>DevOps is everywhere, and every new or existing project is at least considering to follow its principles. While implementing DevOps for single projects become more and more straightforward, it&amp;rsquo;s still a challenge to have a coherent DevOps approach at Enterprise level.
Let&amp;rsquo;s dig in what it takes to achieve DevOps in large companies, with Airbus as an example.</description>
    </item>
    
    <item>
      <title>Le burn-out agile</title>
      <link>https://aeroki.ru/sessions/le_burn_out_agile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://aeroki.ru/sessions/le_burn_out_agile/</guid>
      <description>En 2019, le monde de l’informatique n’a que l’agilité à la bouche. Ca groome à tous les coins de rue, ça s’excite en daily, ça colle des post-it et ça empile les serious game en rétro. Bien sûr, ça gère la transformation numérique (désolé, même au second degré, je ne peux pas employer “digitale”) et au final plus personne ne comprend rien.
Des chefs de projet subitement propulsés ScrumMaster qui ne savent pas ce qu’ils doivent faire.</description>
    </item>
    
    <item>
      <title>Le design de l&#39;erreur</title>
      <link>https://aeroki.ru/sessions/le_design_de_l_erreur/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://aeroki.ru/sessions/le_design_de_l_erreur/</guid>
      <description>Nos systèmes sont designés de manière optimiste, de la gestion technique des erreurs à la modélisation de nos interfaces.
Que ce soient les codes d&amp;rsquo;erreurs, les exceptions ou les modélisations plus avancées, elles servent pour arrêter un traitement et potentiellement afficher un message d&amp;rsquo;information à un utilisateur.
Mais avec les architectures microservices, la distribution des traitements ou une simple volonté de résilience, la gestion des erreurs est devenue un enjeu important de tous les systèmes afin qu’ils restent accessibles de tous, tout le temps tout en maintenant le système dans un état cohérent.</description>
    </item>
    
    <item>
      <title>Le jaillissement de l&#39;esprit</title>
      <link>https://aeroki.ru/sessions/le_jaillissement_de_l_esprit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://aeroki.ru/sessions/le_jaillissement_de_l_esprit/</guid>
      <description>Les enfants sont eux-mêmes les bâtisseurs actifs de leurs propres structures intellectuelles et l&amp;rsquo;informatique y joue un rôle déterminant, disait Piaget, un célèbre biologiste, psychologue et logicien. Son collaborateur, Seymour Papert, inventera le langage Logo, langage qui fait qu&amp;rsquo;aujourd’hui je suis un développeur épanoui. Qu&amp;rsquo;en est-il aujourd&amp;rsquo;hui ? Comment donner le goût du code à nos enfants et surtout pourquoi est-ce important ? Avec Saskia, Loïs et leur père nous voyagerons à travers le temps, en partant de la tortue sur ce bon vieux M05 en passant par Scratch, le Logo hipster de nos jours, jusqu’à Groovy et Python.</description>
    </item>
    
  </channel>
</rss>
